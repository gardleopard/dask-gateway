# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#
name: Test

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "**.rst"
      - ".github/workflows/*"
      - "!.github/workflows/test.yaml"
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "**.rst"
      - ".github/workflows/*"
      - "!.github/workflows/test.yaml"
    branches: ["main"]
    tags: ["**"]
  workflow_dispatch:

env:
  commit_msg: ${{ github.event.head_commit.message }}

jobs:
  main-tests:
    runs-on: ubuntu-24.04
    timeout-minutes: 7

    strategy:
      fail-fast: false
      matrix:
        include:
          # We test against different versions of Python and Golang, but not
          # against different versions of Node.
          #
          # - The Python version installed where dask-gateway and
          #   dask-gateway-proxy is run by the end user matters, so we test
          #   against all the versions we intend to support.
          #
          #   We could for example choose to test against the versions that
          #   hasn't reached end of life yet: https://endoflife.date/python.
          #
          # - The Golang version that compiles
          #   dask-gateway-server/dask-gateway-proxy bundled for the
          #   dask-gateway-server Python package is the only thing that matters.
          #   Due to that, we can test fewer versions of Golang.
          #
          #   We could for example choose to test against the versions that
          #   hasn't reached end of life yet: https://endoflife.date/go.
          #
          # - Node is a dependency for JupyterHub's configurable-http-proxy that
          #   we test integration with. We can test against only one version and
          #   that would be fine.
          #
          - python-version: "3.13"
            go-version: "1.21"
          - python-version: "3.13"
            go-version: "1.22"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/setup-go@v5
        with:
          go-version: "${{ matrix.go-version }}"
      - uses: actions/setup-node@v4

      # jupyterhub will when being mock started as part of running tests depend
      # on the Node npm package configurable-http-proxy.
      #
      - name: Install jupyterhub with system dependencies
        run: |
          npm install -g configurable-http-proxy
          pip install jupyterhub

      - name: Install Python test requirements
        run: |
          pip install -r tests/requirements.txt

      - name: List Python dependencies
        run: |
          pip freeze

      - name: Check that golang binary was built
        run: |
          echo "As part of installing dask-gateway-server, a golang binary"
          echo "should be built and bundled, this checks that it was."

          FILE=dask-gateway-server/dask_gateway_server/proxy/dask-gateway-proxy
          if [ -f "$FILE" ]; then
              echo "$FILE exists."
          else
              echo "$FILE does not exist."
              exit 1
          fi

      - name: Run Python tests
        run: |
          pytest -v tests/ -k 'not kubernetes'

      - name: Install Go test requirements
        run: |
          cd dask-gateway-server/dask-gateway-proxy
          go get github.com/stretchr/testify/assert

      # pkg level tests
      - name: Run Go Tests - pkg/router
        run: |
          cd dask-gateway-server/dask-gateway-proxy
          go test ./pkg/router

      - name: Run Go Tests - pkg/sni
        run: |
          cd dask-gateway-server/dask-gateway-proxy
          go test ./pkg/sni

      # logging framework tests
      - name: Run Go Tests - internal/logging
        run: |
          cd dask-gateway-server/dask-gateway-proxy
          go test ./internal/logging
